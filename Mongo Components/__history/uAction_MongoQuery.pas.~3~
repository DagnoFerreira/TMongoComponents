unit uAction_MongoQuery;

interface

uses
  FMX.ActnList;

type
  TMongoInsert = class(TAction)
  public
    function HandlesTarget(Target: TObject): Boolean; override;
    procedure UpdateTarget(Target: TObject); override;
    procedure ExecuteTarget(Target: TObject); override;
  end;

  procedure Register;

implementation

uses uMongoQuery;

procedure TMongoInsert.ExecuteTarget(Target: TObject);
var
  vsSpell: TVSSpell;
  memEditor: TMemo;
begin
  memEditor := Target as TMemo;
  vsSpell := TVSSpell.Create(Self.Owner);
  try
    vsSpell.CheckText := memEditor.Text;
    if vsSpell.ResultCode = 0 then
      memEditor.Text := vsSpell.Text;
  finally
    vsSpell.Free;
  end;
end;

function TMongoInsert.HandlesTarget(
  Target: TObject): Boolean;
begin
  Result := (Screen.ActiveControl is TMemo);
  if not Result then
    Enabled := False;
end;

procedure TMongoInsert.UpdateTarget(Target: TObject);
begin
  Enabled := (Target as TMemo).Text <> '';
end;

procedure Register;
begin
  RegisterActions('Mongo Components', [TMongoInsert], nil);
end;
end.

end.
