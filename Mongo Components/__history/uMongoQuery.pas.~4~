unit uMongoQuery;

interface

uses
  System.SysUtils, System.Classes, mongoWire, bsonDoc;

type
  TConexaoQuery = class(TComponent)
    private
      FMongoWire : TMongoWire;
      FAtivar : Boolean;
      procedure setAtivar(const Value: boolean);
    public
       FMongoWireQuery : TMongoWireQuery;
       constructor Create(AOwner: TComponent); override;
    published
      property MongoWire : TMongoWire read FMongoWire write FMongoWire;
      property Ativar : Boolean read FAtivar write setAtivar;
  end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('Mongo Components', [TConexaoQuery]);
end;

constructor TConexaoQuery.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
end;

procedure TConexaoQuery.setAtivar(const Value: boolean);
begin
  FMongoWire:=TMongoWire.Create(FDatabase);
  FMongoWire.Open(FHost,FPorta);
  FAtivar := Value;
end;


end.
